#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["M_body", "M_veins", "M_stems", "M_antigens", "cancerCell_complex"]
    def "cancerCell_complex" (
        active = true
        references = @Assets/CancerCell/cancerCell_complex.usd@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "AnimationLibrary"
        {
            reorder nameChildren = ["default_subtree_animation", "death"]
        }

        over "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/cancerCell_complex/OnAddedToScene>
        }

        over "body"
        {
            over "veins" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/M_veins/cancerCell_reusable> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "cancerCellSurface" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/M_body/cancerCell_reusable> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Antigens" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/M_antigens/cancerCell_reusable> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }

            over "Stems" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/M_stems/cancerCell_reusable> (
                    bindMaterialAs = "strongerThanDescendants"
                )
            }
        }
    }

    def "M_body" (
        active = true
        references = @Assets/CancerCell/M_cancerCell.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
    }

    def "M_veins" (
        active = true
        references = @Assets/CancerCell/M_cancerCell.usda@
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        float3 xformOp:scale = (1, 1, 1)

        over "cancerCell_reusable"
        {
            asset inputs:diffuseColor = @Assets/CancerCell/textures/cancerCell_Tumor_BaseColor.png@
            asset inputs:Normal = @Assets/CancerCell/textures/cancerCell_Tumor_Normal.png@
            asset inputs:Roughness = @Assets/CancerCell/textures/cancerCell_Tumor_Roughness.png@
        }
    }

    def "M_stems" (
        active = true
        references = @Assets/CancerCell/M_cancerCell.usda@
    )
    {
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        float3 xformOp:scale = (1, 1, 1)

        over "cancerCell_reusable"
        {
            asset inputs:diffuseColor = @Assets/CancerCell/textures/cancerCell_Stem.002_BaseColor.png@
            asset inputs:Normal = @Assets/CancerCell/textures/cancerCell_Stem.002_Normal.png@
            asset inputs:Roughness = @Assets/CancerCell/textures/cancerCell_Stem.002_Roughness.png@

            over "displace"
            {
                float inputs:speed = 1
            }
        }
    }

    def "M_antigens" (
        active = true
        references = @Assets/CancerCell/M_cancerCell.usda@
    )
    {
        float2 ui:nodegraph:node:pos = (60, 60)
        int ui:nodegraph:node:stackingOrder = 3
        float3 xformOp:scale = (1, 1, 1)

        over "cancerCell_reusable"
        {
            asset inputs:diffuseColor = @Assets/CancerCell/textures/cancerCell_Connector_BaseColor.png@
            asset inputs:Normal = @Assets/CancerCell/textures/cancerCell_Connector_Normal.png@
            asset inputs:Roughness = @Assets/CancerCell/textures/cancerCell_Connector_Roughness.png@

            over "displace"
            {
                float inputs:speed = 2
                float inputs:X = 80000
                float inputs:Z = 100000
            }
        }
    }
}

